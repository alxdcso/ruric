{"ast":null,"code":"var _jsxFileName = \"/Users/alexandrugarabajii/Dev/Ruric-SRL/src/components/GalleryMosaic/GalleryMosaic.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useMemo, useState } from 'react';\nimport './GalleryMosaic.css';\nimport { gallery } from './gallery';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// TODO: pune aici imaginile tale (poți avea 20–60+)\nconst ALL_IMAGES = gallery;\nconst VISIBLE_TILES = 16; // câte plăcuțe afișăm simultan\nconst SWAP_EVERY_MS = 2800; // la cât timp facem un „refresh” parțial\nconst SWAP_COUNT = 4; // câte plăcuțe schimbăm la fiecare refresh\n\nfunction shuffle(arr) {\n  const a = arr.slice();\n  for (let i = a.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [a[i], a[j]] = [a[j], a[i]];\n  }\n  return a;\n}\n\n/** pattern fix de mărimi ca în exemplu (haotic, dar echilibrat) */\nconst SIZE_PATTERN = ['l', 's', 'm', 'm', 'm', 'l', 's', 'm', 's', 'm', 'l', 'm', 'm', 's', 'm', 'l'];\nexport default function GalleryMosaic() {\n  _s();\n  const pool = useMemo(() => shuffle(ALL_IMAGES), []);\n  const [cursor, setCursor] = useState(0);\n\n  // inițial umplem vizibilul\n  const initial = useMemo(() => {\n    const out = [];\n    for (let i = 0; i < VISIBLE_TILES; i++) {\n      out.push(pool[(cursor + i) % pool.length]);\n    }\n    return out;\n  }, [pool, cursor]);\n  const [visible, setVisible] = useState(initial);\n  const keyCounter = useRef(0); // ca să forțăm re-animarea la swap\n\n  // la fiecare interval, înlocuim câteva poziții cu următoarele imagini din pool\n  useEffect(() => {\n    const id = setInterval(() => {\n      setVisible(prev => {\n        const next = prev.slice();\n        let localCursor = cursor;\n\n        // alegem SWAP_COUNT poziții distincte\n        const positions = shuffle([...Array(VISIBLE_TILES).keys()]).slice(0, SWAP_COUNT);\n        positions.forEach(pos => {\n          localCursor = (localCursor + 1) % pool.length;\n          next[pos] = pool[localCursor];\n        });\n        setCursor(localCursor);\n        keyCounter.current++; // schimbăm cheia de bază pentru re-animare\n        return next;\n      });\n    }, SWAP_EVERY_MS);\n    return () => clearInterval(id);\n  }, [cursor, pool]);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"gmosaic\",\n    id: \"gallery\",\n    \"aria-labelledby\": \"gmosaic-title\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      id: \"gmosaic-title\",\n      className: \"gmosaic__title\",\n      children: \"Galerie lucr\\u0103ri\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gmosaic__underline\",\n      \"aria-hidden\": \"true\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gmosaic__grid\",\n      role: \"list\",\n      children: visible.map((item, i) => {\n        var _item$alt;\n        const size = SIZE_PATTERN[i % SIZE_PATTERN.length]; // alocare S/M/L\n        // cheia include un counter ca să declanșeze animația de fade pe swap\n        const k = `${i}-${keyCounter.current}-${item.src}`;\n        return /*#__PURE__*/_jsxDEV(\"article\", {\n          role: \"listitem\",\n          className: `gmosaic__tile gmosaic__tile--${size}`,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"gmosaic__img\",\n            src: item.src,\n            alt: (_item$alt = item.alt) !== null && _item$alt !== void 0 ? _item$alt : '',\n            loading: \"lazy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this)\n        }, k, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s(GalleryMosaic, \"7ThwvgLxBBD5HPqrxMFrZgacdfg=\");\n_c = GalleryMosaic;\nvar _c;\n$RefreshReg$(_c, \"GalleryMosaic\");","map":{"version":3,"names":["React","useEffect","useMemo","useState","gallery","jsxDEV","_jsxDEV","ALL_IMAGES","VISIBLE_TILES","SWAP_EVERY_MS","SWAP_COUNT","shuffle","arr","a","slice","i","length","j","Math","floor","random","SIZE_PATTERN","GalleryMosaic","_s","pool","cursor","setCursor","initial","out","push","visible","setVisible","keyCounter","useRef","id","setInterval","prev","next","localCursor","positions","Array","keys","forEach","pos","current","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","role","map","item","_item$alt","size","k","src","alt","loading","_c","$RefreshReg$"],"sources":["/Users/alexandrugarabajii/Dev/Ruric-SRL/src/components/GalleryMosaic/GalleryMosaic.tsx"],"sourcesContent":["import React, { useEffect, useMemo, useState } from 'react';\nimport './GalleryMosaic.css';\nimport {gallery} from './gallery';\n\ntype Item = { src: string; alt?: string };\n\n// TODO: pune aici imaginile tale (poți avea 20–60+)\nconst ALL_IMAGES: Item[] = gallery\nconst VISIBLE_TILES = 16;        // câte plăcuțe afișăm simultan\nconst SWAP_EVERY_MS = 2800;      // la cât timp facem un „refresh” parțial\nconst SWAP_COUNT = 4;            // câte plăcuțe schimbăm la fiecare refresh\n\nfunction shuffle<T>(arr: T[]): T[] {\n  const a = arr.slice();\n  for (let i = a.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [a[i], a[j]] = [a[j], a[i]];\n  }\n  return a;\n}\n\n/** pattern fix de mărimi ca în exemplu (haotic, dar echilibrat) */\nconst SIZE_PATTERN: Array<'s'|'m'|'l'> = [\n  'l','s','m','m',\n  'm','l','s','m',\n  's','m','l','m',\n  'm','s','m','l',\n];\n\nexport default function GalleryMosaic() {\n  const pool = useMemo(() => shuffle(ALL_IMAGES), []);\n  const [cursor, setCursor] = useState(0);\n\n  // inițial umplem vizibilul\n  const initial = useMemo(() => {\n    const out: Item[] = [];\n    for (let i = 0; i < VISIBLE_TILES; i++) {\n      out.push(pool[(cursor + i) % pool.length]);\n    }\n    return out;\n  }, [pool, cursor]);\n\n  const [visible, setVisible] = useState(initial);\n  const keyCounter = useRef(0); // ca să forțăm re-animarea la swap\n\n  // la fiecare interval, înlocuim câteva poziții cu următoarele imagini din pool\n  useEffect(() => {\n    const id = setInterval(() => {\n      setVisible((prev) => {\n        const next = prev.slice();\n        let localCursor = cursor;\n\n        // alegem SWAP_COUNT poziții distincte\n        const positions = shuffle([...Array(VISIBLE_TILES).keys()]).slice(0, SWAP_COUNT);\n\n        positions.forEach((pos) => {\n          localCursor = (localCursor + 1) % pool.length;\n          next[pos] = pool[localCursor];\n        });\n\n        setCursor(localCursor);\n        keyCounter.current++; // schimbăm cheia de bază pentru re-animare\n        return next;\n      });\n    }, SWAP_EVERY_MS);\n\n    return () => clearInterval(id);\n  }, [cursor, pool]);\n\n  return (\n    <section className=\"gmosaic\" id=\"gallery\" aria-labelledby=\"gmosaic-title\">\n      <h2 id=\"gmosaic-title\" className=\"gmosaic__title\">Galerie lucrări</h2>\n      <div className=\"gmosaic__underline\" aria-hidden=\"true\" />\n\n      <div className=\"gmosaic__grid\" role=\"list\">\n        {visible.map((item, i) => {\n          const size = SIZE_PATTERN[i % SIZE_PATTERN.length]; // alocare S/M/L\n          // cheia include un counter ca să declanșeze animația de fade pe swap\n          const k = `${i}-${keyCounter.current}-${item.src}`;\n          return (\n            <article\n              key={k}\n              role=\"listitem\"\n              className={`gmosaic__tile gmosaic__tile--${size}`}\n            >\n              <img\n                className=\"gmosaic__img\"\n                src={item.src}\n                alt={item.alt ?? ''}\n                loading=\"lazy\"\n              />\n            </article>\n          );\n        })}\n      </div>\n    </section>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}