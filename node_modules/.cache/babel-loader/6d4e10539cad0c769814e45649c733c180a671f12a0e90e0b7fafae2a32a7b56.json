{"ast":null,"code":"var _jsxFileName = \"/Users/alexandrugarabajii/Dev/Ruric-SRL/src/components/About/About.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport './About.css';\nimport team from '../../images/about/team.jpg';\nimport { translations } from '../../translations';\nimport { useLanguage } from '../languageContext/laguageContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst About = () => {\n  _s();\n  const {\n    language\n  } = useLanguage();\n  const t = translations[language].about;\n  const sectionRef = useRef(null);\n  useEffect(() => {\n    const el = sectionRef.current;\n    if (!el) return;\n    const parts = Array.from(el.querySelectorAll('.about__animate'));\n    const io = new IntersectionObserver(entries => {\n      entries.forEach(entry => {\n        if (entry.isIntersecting) {\n          entry.target.classList.add('is-visible');\n          io.unobserve(entry.target);\n        }\n      });\n    }, {\n      threshold: 0.2\n    });\n    parts.forEach(p => io.observe(p));\n    return () => io.disconnect();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    ref: sectionRef,\n    id: \"about\",\n    className: \"about\",\n    \"aria-labelledby\": \"about-title\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"about__container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"about__left\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"about__line about__animate\",\n          \"aria-hidden\": \"true\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"about__textwrap about__animate\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            id: \"about-title\",\n            className: \"about__title\",\n            children: t.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"about__text\",\n            children: t.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"about__right about__animate\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: team,\n          alt: \"Echipa noastr\\u0103\",\n          className: \"about__image\",\n          loading: \"lazy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(About, \"D27cGwORHhEj6nMF94NX0s43eXk=\", false, function () {\n  return [useLanguage];\n});\n_c = About;\nexport default About;\nvar _c;\n$RefreshReg$(_c, \"About\");","map":{"version":3,"names":["React","useEffect","useRef","team","translations","useLanguage","jsxDEV","_jsxDEV","About","_s","language","t","about","sectionRef","el","current","parts","Array","from","querySelectorAll","io","IntersectionObserver","entries","forEach","entry","isIntersecting","target","classList","add","unobserve","threshold","p","observe","disconnect","ref","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","title","text","src","alt","loading","_c","$RefreshReg$"],"sources":["/Users/alexandrugarabajii/Dev/Ruric-SRL/src/components/About/About.tsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport './About.css';\nimport team from '../../images/about/team.jpg';\nimport { translations } from '../../translations';\nimport { useLanguage } from '../languageContext/laguageContext';\n\nconst About: React.FC = () => {\n  const { language } = useLanguage();\n  const t = translations[language].about;\n\n  const sectionRef = useRef<HTMLElement | null>(null);\n\n  useEffect(() => {\n    const el = sectionRef.current;\n    if (!el) return;\n\n    const parts = Array.from(el.querySelectorAll<HTMLElement>('.about__animate'));\n    const io = new IntersectionObserver(\n      (entries) => {\n        entries.forEach((entry) => {\n          if (entry.isIntersecting) {\n            entry.target.classList.add('is-visible');\n            io.unobserve(entry.target);\n          }\n        });\n      },\n      { threshold: 0.2 }\n    );\n    parts.forEach((p) => io.observe(p));\n    return () => io.disconnect();\n  }, []);\n\n  return (\n    <section ref={sectionRef} id=\"about\" className=\"about\" aria-labelledby=\"about-title\">\n      <div className=\"about__container\">\n        <div className=\"about__left\">\n          <div className=\"about__line about__animate\" aria-hidden=\"true\" />\n          <div className=\"about__textwrap about__animate\">\n            <h2 id=\"about-title\" className=\"about__title\">\n              {t.title}\n            </h2>\n            <p className=\"about__text\">{t.text}</p>\n          </div>\n        </div>\n\n        <div className=\"about__right about__animate\">\n          <img src={team} alt=\"Echipa noastrÄƒ\" className=\"about__image\" loading=\"lazy\" />\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default About;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}