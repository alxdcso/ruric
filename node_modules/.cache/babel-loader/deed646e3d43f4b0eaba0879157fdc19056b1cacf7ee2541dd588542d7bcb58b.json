{"ast":null,"code":"var _jsxFileName = \"/Users/alexandrugarabajii/Dev/Ruric-SRL/src/components/ChiptuningBlock/ChiptuningBlock.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport './ChiptuningBlock.css';\nimport { useLanguage } from '../languageContext/laguageContext';\nimport { translations } from '../../translations';\nimport { powerImg, dynamicsImg, fuelImg, smoothImg, errorImg, safetyImg, stage1, stage2, stage3 } from 'images/chiptuning';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst iconMap = {\n  power: powerImg,\n  dynamics: dynamicsImg,\n  fuel: fuelImg,\n  smooth: smoothImg,\n  error: errorImg,\n  safety: safetyImg\n};\nconst stageMap = {\n  stage1,\n  stage2,\n  stage3\n};\nexport default function Chiptuning() {\n  _s();\n  const {\n    language\n  } = useLanguage();\n  const t = translations[language].chiptuning;\n  const [open, setOpen] = useState(null);\n  const toggleAccordion = idx => setOpen(open === idx ? null : idx);\n\n  // Refs pentru animarea la scroll\n  const cardRefs = useRef([]);\n  const stageRefs = useRef([]);\n  useEffect(() => {\n    const targets = [...cardRefs.current, ...stageRefs.current].filter(Boolean);\n    if (targets.length === 0) return;\n    const io = new IntersectionObserver(entries => {\n      entries.forEach(entry => {\n        if (entry.isIntersecting) {\n          entry.target.classList.add('is-visible');\n          io.unobserve(entry.target);\n        }\n      });\n    }, {\n      threshold: 0.2,\n      rootMargin: '0px 0px -5% 0px'\n    });\n    targets.forEach(el => io.observe(el));\n    return () => io.disconnect();\n  }, [language]);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    id: \"chiptuning\",\n    className: \"chip\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"chip__title\",\n      children: t.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chip__grid\",\n      children: t.features.map((f, i) => /*#__PURE__*/_jsxDEV(\"article\", {\n        className: \"chip__card anim-fade-up\",\n        \"aria-label\": f.title,\n        ref: el => {\n          // IMPORTANT: funcție cu acolade => returnează void\n          cardRefs.current[i] = el;\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chip__content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"chip__card-title\",\n            children: f.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"chip__list\",\n            children: f.text.map((line, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: line\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chip__media\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: iconMap[f.icon],\n            alt: \"\",\n            \"aria-hidden\": \"true\",\n            loading: \"lazy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chip__stages\",\n      children: t.stages.map((s, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chip__stage anim-fade-up\",\n        ref: el => {\n          stageRefs.current[i] = el;\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: stageMap[s.stageKey],\n          alt: \"\",\n          className: \"chip__stage-img\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"chip__stage-title\",\n          children: s.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"chip__stage-desc\",\n          children: s.desc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chip__accordions\",\n      children: t.accordions.map((a, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `chip__accordion ${open === i ? 'chip__accordion--open' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"chip__accordion-header\",\n          onClick: () => toggleAccordion(i),\n          children: [a.title, /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `chip__accordion-icon ${open === i ? 'open' : ''}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this), open === i && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chip__accordion-content\",\n          children: a.content.split('\\n').map((p, idx) => p.trim() ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: p\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 64\n          }, this) : null)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 15\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(Chiptuning, \"cleeXrEsS2yafG04vUJGO2yLhgg=\", false, function () {\n  return [useLanguage];\n});\n_c = Chiptuning;\nvar _c;\n$RefreshReg$(_c, \"Chiptuning\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useLanguage","translations","powerImg","dynamicsImg","fuelImg","smoothImg","errorImg","safetyImg","stage1","stage2","stage3","jsxDEV","_jsxDEV","iconMap","power","dynamics","fuel","smooth","error","safety","stageMap","Chiptuning","_s","language","t","chiptuning","open","setOpen","toggleAccordion","idx","cardRefs","stageRefs","targets","current","filter","Boolean","length","io","IntersectionObserver","entries","forEach","entry","isIntersecting","target","classList","add","unobserve","threshold","rootMargin","el","observe","disconnect","id","className","children","title","fileName","_jsxFileName","lineNumber","columnNumber","features","map","f","i","ref","text","line","src","icon","alt","loading","stages","s","stageKey","desc","accordions","a","onClick","content","split","p","trim","_c","$RefreshReg$"],"sources":["/Users/alexandrugarabajii/Dev/Ruric-SRL/src/components/ChiptuningBlock/ChiptuningBlock.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport './ChiptuningBlock.css';\nimport { useLanguage } from '../languageContext/laguageContext';\nimport { translations } from '../../translations';\n\nimport {\n  powerImg,\n  dynamicsImg,\n  fuelImg,\n  smoothImg,\n  errorImg,\n  safetyImg,\n  stage1,\n  stage2,\n  stage3,\n} from 'images/chiptuning';\n\nconst iconMap: Record<string, string> = {\n  power: powerImg,\n  dynamics: dynamicsImg,\n  fuel: fuelImg,\n  smooth: smoothImg,\n  error: errorImg,\n  safety: safetyImg,\n};\nconst stageMap: Record<string, string> = {\n  stage1,\n  stage2,\n  stage3,\n};\n\nexport default function Chiptuning() {\n  const { language } = useLanguage();\n  const t = translations[language].chiptuning;\n\n  const [open, setOpen] = useState<number | null>(null);\n  const toggleAccordion = (idx: number) => setOpen(open === idx ? null : idx);\n\n  // Refs pentru animarea la scroll\n  const cardRefs = useRef<(HTMLElement | null)[]>([]);\n  const stageRefs = useRef<(HTMLElement | null)[]>([]);\n\n  useEffect(() => {\n    const targets = [...cardRefs.current, ...stageRefs.current].filter(Boolean) as HTMLElement[];\n    if (targets.length === 0) return;\n\n    const io = new IntersectionObserver(\n      (entries) => {\n        entries.forEach((entry) => {\n          if (entry.isIntersecting) {\n            entry.target.classList.add('is-visible');\n            io.unobserve(entry.target);\n          }\n        });\n      },\n      { threshold: 0.2, rootMargin: '0px 0px -5% 0px' }\n    );\n\n    targets.forEach((el) => io.observe(el));\n    return () => io.disconnect();\n  }, [language]);\n\n  return (\n    <section id=\"chiptuning\" className=\"chip\">\n      <h2 className=\"chip__title\">{t.title}</h2>\n\n      {/* CARDS */}\n      <div className=\"chip__grid\">\n        {t.features.map((f, i) => (\n          <article\n            key={i}\n            className=\"chip__card anim-fade-up\"\n            aria-label={f.title}\n            ref={(el) => {\n              // IMPORTANT: funcție cu acolade => returnează void\n              cardRefs.current[i] = el;\n            }}\n          >\n            <div className=\"chip__content\">\n              <h3 className=\"chip__card-title\">{f.title}</h3>\n              <ul className=\"chip__list\">\n                {f.text.map((line: string, idx: number) => (\n                  <li key={idx}>{line}</li>\n                ))}\n              </ul>\n            </div>\n\n            <div className=\"chip__media\">\n              <img src={iconMap[f.icon]} alt=\"\" aria-hidden=\"true\" loading=\"lazy\" />\n            </div>\n          </article>\n        ))}\n      </div>\n\n      {/* STAGES */}\n      <div className=\"chip__stages\">\n        {t.stages.map((s, i) => (\n          <div\n            key={i}\n            className=\"chip__stage anim-fade-up\"\n            ref={(el) => {\n              stageRefs.current[i] = el;\n            }}\n          >\n            <img src={stageMap[s.stageKey]} alt=\"\" className=\"chip__stage-img\" />\n            <span className=\"chip__stage-title\">{s.title}</span>\n            <p className=\"chip__stage-desc\">{s.desc}</p>\n          </div>\n        ))}\n      </div>\n\n      {/* ACCORDIONS */}\n      <div className=\"chip__accordions\">\n        {t.accordions.map((a, i) => (\n          <div key={i} className={`chip__accordion ${open === i ? 'chip__accordion--open' : ''}`}>\n            <button className=\"chip__accordion-header\" onClick={() => toggleAccordion(i)}>\n              {a.title}\n              <span className={`chip__accordion-icon ${open === i ? 'open' : ''}`} />\n            </button>\n            {open === i && (\n              <div className=\"chip__accordion-content\">\n                {a.content\n                  .split('\\n')\n                  .map((p: string, idx: number) => (p.trim() ? <p key={idx}>{p}</p> : null))}\n              </div>\n            )}\n          </div>\n        ))}\n      </div>\n    </section>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}