{"ast":null,"code":"var _jsxFileName = \"/Users/alexandrugarabajii/Dev/Ruric-SRL/src/components/GalleryMosaic/GalleryMosaic.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useMemo, useRef, useState } from 'react';\nimport './GalleryMosaic.css';\nimport { galleryExtended as gallery } from './gallery';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// TODO: pune aici imaginile tale (poți avea 20–60+)\nconst ALL_IMAGES = gallery;\nconst VISIBLE_TILES = 18; // câte plăcuțe sunt simultan în cadru\nconst SWAP_EVERY_MS = 2800; // la cât timp schimbăm câteva\nconst SWAP_COUNT = 4; // câte schimbăm pe refresh\n\nfunction shuffle(arr) {\n  const a = arr.slice();\n  for (let i = a.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [a[i], a[j]] = [a[j], a[i]];\n  }\n  return a;\n}\n\n/** pattern fix pentru mărimi; „s/m/l” mapate pe tile-uri pătrate (vezi CSS) */\nconst SIZE_PATTERN = ['l', 'm', 's', 'm', 'l', 's', 'm', 's', 'l', 'm', 's', 'm', 's', 'l', 'm', 's', 'm', 'l'];\nexport default function GalleryMosaic() {\n  _s();\n  const pool = useMemo(() => shuffle(ALL_IMAGES), []);\n  const [cursor, setCursor] = useState(0);\n\n  // imagini vizibile inițial\n  const init = useMemo(() => {\n    const out = [];\n    for (let i = 0; i < VISIBLE_TILES; i++) {\n      out.push(pool[i % pool.length]);\n    }\n    return out;\n  }, [pool]);\n  const [visible, setVisible] = useState(init);\n  const keyBump = useRef(0);\n  useEffect(() => {\n    const id = setInterval(() => {\n      setVisible(prev => {\n        const next = prev.slice();\n        let cur = cursor;\n\n        // alegem poziții random de înlocuit\n        const positions = shuffle([...Array(VISIBLE_TILES).keys()]).slice(0, SWAP_COUNT);\n        positions.forEach(pos => {\n          cur = (cur + 1) % pool.length;\n          next[pos] = pool[cur];\n        });\n        setCursor(cur);\n        keyBump.current++;\n        return next;\n      });\n    }, SWAP_EVERY_MS);\n    return () => clearInterval(id);\n  }, [cursor, pool]);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"gmosaic\",\n    id: \"gallery\",\n    \"aria-labelledby\": \"gmosaic-title\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      id: \"gmosaic-title\",\n      className: \"gmosaic__title\",\n      children: \"Galerie lucr\\u0103ri\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gmosaic__underline\",\n      \"aria-hidden\": \"true\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gmosaic__frame\",\n      \"data-aspect\": \"16/9\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gmosaic__grid\",\n        role: \"list\",\n        children: visible.map((item, i) => {\n          var _item$alt;\n          const size = SIZE_PATTERN[i % SIZE_PATTERN.length];\n          const k = `${i}-${keyBump.current}-${item.src}`;\n          return /*#__PURE__*/_jsxDEV(\"article\", {\n            role: \"listitem\",\n            className: `gmosaic__tile gmosaic__tile--${size}`,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"gmosaic__img\",\n              src: item.src,\n              alt: (_item$alt = item.alt) !== null && _item$alt !== void 0 ? _item$alt : '',\n              loading: \"lazy\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 17\n            }, this)\n          }, k, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n_s(GalleryMosaic, \"0EL7+ix5ZwsRP41IQyDlH6PXBjo=\");\n_c = GalleryMosaic;\nvar _c;\n$RefreshReg$(_c, \"GalleryMosaic\");","map":{"version":3,"names":["React","useEffect","useMemo","useRef","useState","galleryExtended","gallery","jsxDEV","_jsxDEV","ALL_IMAGES","VISIBLE_TILES","SWAP_EVERY_MS","SWAP_COUNT","shuffle","arr","a","slice","i","length","j","Math","floor","random","SIZE_PATTERN","GalleryMosaic","_s","pool","cursor","setCursor","init","out","push","visible","setVisible","keyBump","id","setInterval","prev","next","cur","positions","Array","keys","forEach","pos","current","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","role","map","item","_item$alt","size","k","src","alt","loading","_c","$RefreshReg$"],"sources":["/Users/alexandrugarabajii/Dev/Ruric-SRL/src/components/GalleryMosaic/GalleryMosaic.tsx"],"sourcesContent":["import React, { useEffect, useMemo, useRef, useState } from 'react';\nimport './GalleryMosaic.css';\nimport { galleryExtended as gallery } from './gallery';\n\ntype Item = { src: string; alt?: string };\n\n// TODO: pune aici imaginile tale (poți avea 20–60+)\nconst ALL_IMAGES: Item[] = gallery;\nconst VISIBLE_TILES = 18;      // câte plăcuțe sunt simultan în cadru\nconst SWAP_EVERY_MS = 2800;    // la cât timp schimbăm câteva\nconst SWAP_COUNT = 4;          // câte schimbăm pe refresh\n\nfunction shuffle<T>(arr: T[]): T[] {\n  const a = arr.slice();\n  for (let i = a.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [a[i], a[j]] = [a[j], a[i]];\n  }\n  return a;\n}\n\n/** pattern fix pentru mărimi; „s/m/l” mapate pe tile-uri pătrate (vezi CSS) */\nconst SIZE_PATTERN: Array<'s'|'m'|'l'> = [\n  'l','m','s','m','l','s',\n  'm','s','l','m','s','m',\n  's','l','m','s','m','l',\n];\n\nexport default function GalleryMosaic() {\n  const pool = useMemo(() => shuffle(ALL_IMAGES), []);\n  const [cursor, setCursor] = useState(0);\n\n  // imagini vizibile inițial\n  const init = useMemo(() => {\n    const out: Item[] = [];\n    for (let i = 0; i < VISIBLE_TILES; i++) {\n      out.push(pool[(i) % pool.length]);\n    }\n    return out;\n  }, [pool]);\n\n  const [visible, setVisible] = useState<Item[]>(init);\n  const keyBump = useRef(0);\n\n  useEffect(() => {\n    const id = setInterval(() => {\n      setVisible((prev) => {\n        const next = prev.slice();\n        let cur = cursor;\n\n        // alegem poziții random de înlocuit\n        const positions = shuffle([...Array(VISIBLE_TILES).keys()]).slice(0, SWAP_COUNT);\n        positions.forEach((pos) => {\n          cur = (cur + 1) % pool.length;\n          next[pos] = pool[cur];\n        });\n\n        setCursor(cur);\n        keyBump.current++;\n        return next;\n      });\n    }, SWAP_EVERY_MS);\n\n    return () => clearInterval(id);\n  }, [cursor, pool]);\n\n  return (\n    <section className=\"gmosaic\" id=\"gallery\" aria-labelledby=\"gmosaic-title\">\n      <h2 id=\"gmosaic-title\" className=\"gmosaic__title\">Galerie lucrări</h2>\n      <div className=\"gmosaic__underline\" aria-hidden=\"true\" />\n\n      {/* Cadrul cu raport fix; schimbă data-aspect=\"1/1\" dacă vrei pătrat */}\n      <div className=\"gmosaic__frame\" data-aspect=\"16/9\">\n        <div className=\"gmosaic__grid\" role=\"list\">\n          {visible.map((item, i) => {\n            const size = SIZE_PATTERN[i % SIZE_PATTERN.length];\n            const k = `${i}-${keyBump.current}-${item.src}`;\n            return (\n              <article key={k} role=\"listitem\" className={`gmosaic__tile gmosaic__tile--${size}`}>\n                <img className=\"gmosaic__img\" src={item.src} alt={item.alt ?? ''} loading=\"lazy\" />\n              </article>\n            );\n          })}\n        </div>\n      </div>\n    </section>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}