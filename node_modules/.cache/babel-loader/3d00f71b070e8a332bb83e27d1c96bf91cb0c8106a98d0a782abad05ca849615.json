{"ast":null,"code":"var _jsxFileName = \"/Users/alexandrugarabajii/Dev/Ruric-SRL/src/components/BannerSlider/Banners.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Banners.css';\nimport { banners } from './mock-banner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BannerSlider = () => {\n  _s();\n  const [currentIndex, setCurrentIndex] = useState(0);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      handleNext();\n    }, 5000);\n    return () => clearInterval(interval);\n  }, []);\n  const handlePrev = () => {\n    setCurrentIndex(prev => (prev - 1 + banners.length) % banners.length);\n  };\n  const handleNext = () => {\n    setCurrentIndex(prev => (prev + 1) % banners.length);\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"banner-slider\",\n    children: [banners.map((banner, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n      src: banner.url,\n      alt: banner.alt,\n      className: `banner-image ${index === currentIndex ? 'active' : ''}`\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"arrow left\",\n      onClick: handlePrev,\n      children: \"\\u276E\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"arrow right\",\n      onClick: handleNext,\n      children: \"\\u276F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dots\",\n      children: banners.map((_, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: () => setCurrentIndex(index),\n        className: `dot ${index === currentIndex ? 'active' : ''}`\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(BannerSlider, \"tPjzCc9H5UuFdWNuAHYoD0K4UOk=\");\n_c = BannerSlider;\nexport default BannerSlider;\nvar _c;\n$RefreshReg$(_c, \"BannerSlider\");","map":{"version":3,"names":["React","useState","useEffect","banners","jsxDEV","_jsxDEV","BannerSlider","_s","currentIndex","setCurrentIndex","interval","setInterval","handleNext","clearInterval","handlePrev","prev","length","className","children","map","banner","index","src","url","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_","_c","$RefreshReg$"],"sources":["/Users/alexandrugarabajii/Dev/Ruric-SRL/src/components/BannerSlider/Banners.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './Banners.css';\nimport { banners, Banner } from './mock-banner';\n\n\nconst BannerSlider: React.FC = () => {\n  const [currentIndex, setCurrentIndex] = useState(0);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      handleNext();\n    }, 5000);\n    return () => clearInterval(interval);\n  }, []);\n\n  const handlePrev = () => {\n    setCurrentIndex((prev) => (prev - 1 + banners.length) % banners.length);\n  };\n\n  const handleNext = () => {\n    setCurrentIndex((prev) => (prev + 1) % banners.length);\n  };\n\n  return (\n    <section className=\"banner-slider\">\n      {banners.map((banner: Banner, index: number) => (\n        <img\n          key={index}\n          src={banner.url}\n          alt={banner.alt}\n          className={`banner-image ${index === currentIndex ? 'active' : ''}`}\n        />\n      ))}\n\n      <button className=\"arrow left\" onClick={handlePrev}>\n        ❮\n      </button>\n      <button className=\"arrow right\" onClick={handleNext}>\n        ❯\n      </button>\n\n      <div className=\"dots\">\n        {banners.map((_, index) => (\n          <span\n            key={index}\n            onClick={() => setCurrentIndex(index)}\n            className={`dot ${index === currentIndex ? 'active' : ''}`}\n          />\n        ))}\n      </div>\n    </section>\n  );\n};\n\nexport default BannerSlider;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,eAAe;AACtB,SAASC,OAAO,QAAgB,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGhD,MAAMC,YAAsB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnC,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EAEnDC,SAAS,CAAC,MAAM;IACd,MAAMQ,QAAQ,GAAGC,WAAW,CAAC,MAAM;MACjCC,UAAU,CAAC,CAAC;IACd,CAAC,EAAE,IAAI,CAAC;IACR,OAAO,MAAMC,aAAa,CAACH,QAAQ,CAAC;EACtC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMI,UAAU,GAAGA,CAAA,KAAM;IACvBL,eAAe,CAAEM,IAAI,IAAK,CAACA,IAAI,GAAG,CAAC,GAAGZ,OAAO,CAACa,MAAM,IAAIb,OAAO,CAACa,MAAM,CAAC;EACzE,CAAC;EAED,MAAMJ,UAAU,GAAGA,CAAA,KAAM;IACvBH,eAAe,CAAEM,IAAI,IAAK,CAACA,IAAI,GAAG,CAAC,IAAIZ,OAAO,CAACa,MAAM,CAAC;EACxD,CAAC;EAED,oBACEX,OAAA;IAASY,SAAS,EAAC,eAAe;IAAAC,QAAA,GAC/Bf,OAAO,CAACgB,GAAG,CAAC,CAACC,MAAc,EAAEC,KAAa,kBACzChB,OAAA;MAEEiB,GAAG,EAAEF,MAAM,CAACG,GAAI;MAChBC,GAAG,EAAEJ,MAAM,CAACI,GAAI;MAChBP,SAAS,EAAE,gBAAgBI,KAAK,KAAKb,YAAY,GAAG,QAAQ,GAAG,EAAE;IAAG,GAH/Da,KAAK;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIX,CACF,CAAC,eAEFvB,OAAA;MAAQY,SAAS,EAAC,YAAY;MAACY,OAAO,EAAEf,UAAW;MAAAI,QAAA,EAAC;IAEpD;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACTvB,OAAA;MAAQY,SAAS,EAAC,aAAa;MAACY,OAAO,EAAEjB,UAAW;MAAAM,QAAA,EAAC;IAErD;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAETvB,OAAA;MAAKY,SAAS,EAAC,MAAM;MAAAC,QAAA,EAClBf,OAAO,CAACgB,GAAG,CAAC,CAACW,CAAC,EAAET,KAAK,kBACpBhB,OAAA;QAEEwB,OAAO,EAAEA,CAAA,KAAMpB,eAAe,CAACY,KAAK,CAAE;QACtCJ,SAAS,EAAE,OAAOI,KAAK,KAAKb,YAAY,GAAG,QAAQ,GAAG,EAAE;MAAG,GAFtDa,KAAK;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGX,CACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEd,CAAC;AAACrB,EAAA,CA/CID,YAAsB;AAAAyB,EAAA,GAAtBzB,YAAsB;AAiD5B,eAAeA,YAAY;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}