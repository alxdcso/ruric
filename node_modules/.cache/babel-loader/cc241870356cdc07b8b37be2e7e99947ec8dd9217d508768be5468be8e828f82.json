{"ast":null,"code":"var _jsxFileName = \"/Users/alexandrugarabajii/Dev/Ruric-SRL/src/components/Services/Services.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Services.css';\nimport { useLanguage } from '../languageContext/laguageContext';\nimport { translations } from '../../translations';\nimport ServiceCard from '../ServiceCard/ServiceCard';\nimport SkeletonCard from '../Skeleton/SkeletonCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Services = () => {\n  _s();\n  const {\n    language\n  } = useLanguage();\n  const t = translations[language].services;\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const timer = setTimeout(() => setLoading(false), 500);\n    return () => clearTimeout(timer);\n  }, []);\n  const items = t.items;\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    id: \"services\",\n    className: \"services\",\n    \"aria-labelledby\": \"services-title\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      id: \"services-title\",\n      className: \"services__title\",\n      children: t.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"services__underline\",\n      \"aria-hidden\": \"true\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"services__grid\",\n      children: loading ? Array.from({\n        length: 4\n      }).map((_, i) => /*#__PURE__*/_jsxDEV(SkeletonCard, {}, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 53\n      }, this)) : items.map(service => /*#__PURE__*/_jsxDEV(ServiceCard, {\n        title: service.title,\n        iconSrc: service.iconSrc,\n        points: service.points\n      }, service.title, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(Services, \"vyIoRfS/cTuMLMV/jA5oLmgFhYU=\", false, function () {\n  return [useLanguage];\n});\n_c = Services;\nexport default Services;\nvar _c;\n$RefreshReg$(_c, \"Services\");","map":{"version":3,"names":["React","useState","useEffect","useLanguage","translations","ServiceCard","SkeletonCard","jsxDEV","_jsxDEV","Services","_s","language","t","services","loading","setLoading","timer","setTimeout","clearTimeout","items","id","className","children","title","fileName","_jsxFileName","lineNumber","columnNumber","Array","from","length","map","_","i","service","iconSrc","points","_c","$RefreshReg$"],"sources":["/Users/alexandrugarabajii/Dev/Ruric-SRL/src/components/Services/Services.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './Services.css';\nimport { useLanguage } from '../languageContext/laguageContext';\nimport { translations } from '../../translations';\nimport ServiceCard from '../ServiceCard/ServiceCard';\nimport SkeletonCard from '../Skeleton/SkeletonCard';\n\ntype ServiceItem = {\n  title: string;\n  iconSrc: string;\n  points?: string[];\n};\n\nconst Services: React.FC = () => {\n  const { language } = useLanguage();\n  const t = translations[language].services;\n\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const timer = setTimeout(() => setLoading(false), 500);\n    return () => clearTimeout(timer);\n  }, []);\n\n  const items = t.items as ServiceItem[];\n\n  return (\n    <section id=\"services\" className=\"services\" aria-labelledby=\"services-title\">\n      <h2 id=\"services-title\" className=\"services__title\">\n        {t.title}\n      </h2>\n\n      <div className=\"services__underline\" aria-hidden=\"true\" />\n\n      <div className=\"services__grid\">\n        {loading\n          ? Array.from({ length: 4 }).map((_, i) => <SkeletonCard key={i} />)\n          : items.map((service) => (\n            <ServiceCard\n              key={service.title}\n              title={service.title}\n              iconSrc={service.iconSrc}\n              points={service.points}\n            />\n          ))}\n      </div>\n    </section>\n  );\n};\n\nexport default Services;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,gBAAgB;AACvB,SAASC,WAAW,QAAQ,mCAAmC;AAC/D,SAASC,YAAY,QAAQ,oBAAoB;AACjD,OAAOC,WAAW,MAAM,4BAA4B;AACpD,OAAOC,YAAY,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQpD,MAAMC,QAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAM;IAAEC;EAAS,CAAC,GAAGR,WAAW,CAAC,CAAC;EAClC,MAAMS,CAAC,GAAGR,YAAY,CAACO,QAAQ,CAAC,CAACE,QAAQ;EAEzC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd,MAAMc,KAAK,GAAGC,UAAU,CAAC,MAAMF,UAAU,CAAC,KAAK,CAAC,EAAE,GAAG,CAAC;IACtD,OAAO,MAAMG,YAAY,CAACF,KAAK,CAAC;EAClC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,KAAK,GAAGP,CAAC,CAACO,KAAsB;EAEtC,oBACEX,OAAA;IAASY,EAAE,EAAC,UAAU;IAACC,SAAS,EAAC,UAAU;IAAC,mBAAgB,gBAAgB;IAAAC,QAAA,gBAC1Ed,OAAA;MAAIY,EAAE,EAAC,gBAAgB;MAACC,SAAS,EAAC,iBAAiB;MAAAC,QAAA,EAChDV,CAAC,CAACW;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAELnB,OAAA;MAAKa,SAAS,EAAC,qBAAqB;MAAC,eAAY;IAAM;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAE1DnB,OAAA;MAAKa,SAAS,EAAC,gBAAgB;MAAAC,QAAA,EAC5BR,OAAO,GACJc,KAAK,CAACC,IAAI,CAAC;QAAEC,MAAM,EAAE;MAAE,CAAC,CAAC,CAACC,GAAG,CAAC,CAACC,CAAC,EAAEC,CAAC,kBAAKzB,OAAA,CAACF,YAAY,MAAM2B,CAAC;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,CAAC,GACjER,KAAK,CAACY,GAAG,CAAEG,OAAO,iBAClB1B,OAAA,CAACH,WAAW;QAEVkB,KAAK,EAAEW,OAAO,CAACX,KAAM;QACrBY,OAAO,EAAED,OAAO,CAACC,OAAQ;QACzBC,MAAM,EAAEF,OAAO,CAACE;MAAO,GAHlBF,OAAO,CAACX,KAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAInB,CACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEd,CAAC;AAACjB,EAAA,CAnCID,QAAkB;EAAA,QACDN,WAAW;AAAA;AAAAkC,EAAA,GAD5B5B,QAAkB;AAqCxB,eAAeA,QAAQ;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}