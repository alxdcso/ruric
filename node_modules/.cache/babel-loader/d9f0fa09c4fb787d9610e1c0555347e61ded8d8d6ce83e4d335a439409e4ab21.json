{"ast":null,"code":"var _jsxFileName = \"/Users/alexandrugarabajii/Dev/Ruric-SRL/src/components/GalleryMosaic/GalleryMosaic.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useMemo, useState } from 'react';\nimport './GalleryMosaic.css';\nimport { gallery } from '/components/GalleryMosaic/gallery';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// TODO: pune aici imaginile tale (poți avea 20–60+)\nconst ALL_IMAGES = gallery;\nconst BATCH_SIZE = 8; // câte imagini apar pe rând\nconst BATCH_INTERVAL_MS = 2500; // la cât timp apare următorul lot\n\nfunction shuffle(arr) {\n  const a = arr.slice();\n  for (let i = a.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [a[i], a[j]] = [a[j], a[i]];\n  }\n  return a;\n}\nexport default function GalleryMosaic() {\n  _s();\n  const randomized = useMemo(() => shuffle(ALL_IMAGES), []);\n  const [visibleCount, setVisibleCount] = useState(BATCH_SIZE);\n\n  // loturi care apar în timp\n  useEffect(() => {\n    if (visibleCount >= randomized.length) return;\n    const id = setInterval(() => {\n      setVisibleCount(n => Math.min(n + BATCH_SIZE, randomized.length));\n    }, BATCH_INTERVAL_MS);\n    return () => clearInterval(id);\n  }, [visibleCount, randomized.length]);\n\n  // alocă mărimi (S/M/L) pseudo-random dar „frumoase”\n  const sized = useMemo(() => {\n    const sizes = ['s', 'm', 's', 'm', 'l', 's', 'm', 's']; // pattern balansat\n    return randomized.map((it, i) => ({\n      ...it,\n      size: sizes[i % sizes.length]\n    }));\n  }, [randomized]);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"gmosaic\",\n    id: \"gallery\",\n    \"aria-labelledby\": \"gmosaic-title\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      id: \"gmosaic-title\",\n      className: \"gmosaic__title\",\n      children: \"Galerie lucr\\u0103ri\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gmosaic__underline\",\n      \"aria-hidden\": \"true\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gmosaic__grid\",\n      role: \"list\",\n      children: sized.slice(0, visibleCount).map((item, i) => {\n        var _item$alt;\n        return /*#__PURE__*/_jsxDEV(\"article\", {\n          role: \"listitem\",\n          className: `gmosaic__tile gmosaic__tile--${item.size}`,\n          style: {\n            animationDelay: `${i % BATCH_SIZE * 60}ms`\n          } // mic stagger per lot\n          ,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: item.src,\n            alt: (_item$alt = item.alt) !== null && _item$alt !== void 0 ? _item$alt : '',\n            loading: \"lazy\",\n            className: \"gmosaic__img\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(GalleryMosaic, \"VVVxTgENYj3CEK5+4VhV0US1SqE=\");\n_c = GalleryMosaic;\nvar _c;\n$RefreshReg$(_c, \"GalleryMosaic\");","map":{"version":3,"names":["React","useEffect","useMemo","useState","gallery","jsxDEV","_jsxDEV","ALL_IMAGES","BATCH_SIZE","BATCH_INTERVAL_MS","shuffle","arr","a","slice","i","length","j","Math","floor","random","GalleryMosaic","_s","randomized","visibleCount","setVisibleCount","id","setInterval","n","min","clearInterval","sized","sizes","map","it","size","className","children","fileName","_jsxFileName","lineNumber","columnNumber","role","item","_item$alt","style","animationDelay","src","alt","loading","_c","$RefreshReg$"],"sources":["/Users/alexandrugarabajii/Dev/Ruric-SRL/src/components/GalleryMosaic/GalleryMosaic.tsx"],"sourcesContent":["import React, { useEffect, useMemo, useState } from 'react';\nimport './GalleryMosaic.css';\nimport {gallery} from '/components/GalleryMosaic/gallery';\n\ntype Item = { src: string; alt?: string };\n\n// TODO: pune aici imaginile tale (poți avea 20–60+)\nconst ALL_IMAGES: Item[] = gallery\n\nconst BATCH_SIZE = 8;          // câte imagini apar pe rând\nconst BATCH_INTERVAL_MS = 2500; // la cât timp apare următorul lot\n\nfunction shuffle<T>(arr: T[]): T[] {\n  const a = arr.slice();\n  for (let i = a.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [a[i], a[j]] = [a[j], a[i]];\n  }\n  return a;\n}\n\nexport default function GalleryMosaic() {\n  const randomized = useMemo(() => shuffle(ALL_IMAGES), []);\n  const [visibleCount, setVisibleCount] = useState(BATCH_SIZE);\n\n  // loturi care apar în timp\n  useEffect(() => {\n    if (visibleCount >= randomized.length) return;\n    const id = setInterval(() => {\n      setVisibleCount((n) => Math.min(n + BATCH_SIZE, randomized.length));\n    }, BATCH_INTERVAL_MS);\n    return () => clearInterval(id);\n  }, [visibleCount, randomized.length]);\n\n  // alocă mărimi (S/M/L) pseudo-random dar „frumoase”\n  const sized = useMemo(() => {\n    const sizes = ['s', 'm', 's', 'm', 'l', 's', 'm', 's']; // pattern balansat\n    return randomized.map((it, i) => ({ ...it, size: sizes[i % sizes.length] as 's'|'m'|'l' }));\n  }, [randomized]);\n\n  return (\n    <section className=\"gmosaic\" id=\"gallery\" aria-labelledby=\"gmosaic-title\">\n      <h2 id=\"gmosaic-title\" className=\"gmosaic__title\">Galerie lucrări</h2>\n      <div className=\"gmosaic__underline\" aria-hidden=\"true\" />\n\n      <div className=\"gmosaic__grid\" role=\"list\">\n        {sized.slice(0, visibleCount).map((item, i) => (\n          <article\n            key={i}\n            role=\"listitem\"\n            className={`gmosaic__tile gmosaic__tile--${item.size}`}\n            style={{ animationDelay: `${(i % BATCH_SIZE) * 60}ms` }} // mic stagger per lot\n          >\n            <img\n              src={item.src}\n              alt={item.alt ?? ''}\n              loading=\"lazy\"\n              className=\"gmosaic__img\"\n            />\n          </article>\n        ))}\n      </div>\n    </section>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}